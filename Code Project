/*
  Title   : Smart Mushroom House Monitoring System
  Author  : Mohammad Alwi Ferdiansyah Alfarizi
  Description:
    ESP32-based IoT system to monitor environmental conditions
    in a mushroom house. Monitors temperature, humidity, CO2, and pH,
    displays values on LCD, and uploads data to Firebase Realtime Database.
*/

#include <WiFi.h>
#include <FirebaseESP32.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <LiquidCrystal_I2C.h>

// ========================
// Wi-Fi Configuration
// ========================
#define WIFI_SSID "Your Wifi SSID"
#define WIFI_PASSWORD "Your Wifi Password"

// ========================
// Firebase Configuration
// ========================
#define FIREBASE_HOST "Your Firebase Host"
#define FIREBASE_AUTH "Your Authorize Code"

// ========================
// Sensor Pin Definitions
// ========================
#define DHTPIN 4
#define DHTTYPE DHT22
#define MQ135PIN 34
#define PHPIN 35

DHT dht(DHTPIN, DHTTYPE); // Initialize DHT22 sensor

// Initialize Firebase Data Object
FirebaseData firebaseData;
FirebaseConfig config;
FirebaseAuth auth;

// Initialize LCD 20x4
LiquidCrystal_I2C lcd(0x27, 20, 4);

void setup() {
  Serial.begin(115200);
  dht.begin(); // Author: Mohammad Alwi Ferdiansyah Alfarizi

  // Connect to Wi-Fi
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to Wi-Fi");

  // Configure Firebase
  config.host = FIREBASE_HOST;
  config.signer.tokens.legacy_token = FIREBASE_AUTH;
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  // Initialize LCD
  lcd.begin();
  lcd.backlight();

  // Welcome display on LCD
  lcd.setCursor(0, 0);
  lcd.print("Welcome to the");
  lcd.setCursor(0, 1);
  lcd.print("Smart Baglog House");
  lcd.setCursor(0, 2);
  lcd.print("Designed by");
  lcd.setCursor(0, 3);
  lcd.print("Spark Genius");

  delay(3000);
  lcd.clear();
}

void loop() {
  // Reconnect Wi-Fi if disconnected
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Wi-Fi disconnected! Reconnecting...");
    WiFi.reconnect();
    delay(1000);
    return;
  }

  // Read sensor values
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  int mq135Value = analogRead(MQ135PIN);
  float co2 = mq135Value / 1024.0 * 5000; // approximate CO2 in ppm
  int phValue = analogRead(PHPIN);
  float voltage = phValue * (3.3 / 4095.0);
  float ph = 3.5 * voltage + 0.1; // calibration formula

  // Author: Mohammad Alwi Ferdiansyah Alfarizi
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT22 sensor!");
    return;
  }

  // Print values to Serial Monitor
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C  |  Humidity: ");
  Serial.print(humidity);
  Serial.print(" %  |  CO2: ");
  Serial.print(co2);
  Serial.print(" ppm  |  pH: ");
  Serial.println(ph);

  // Display values on LCD
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(temperature);
  lcd.print(" C");

  lcd.setCursor(0, 1);
  lcd.print("Humidity: ");
  lcd.print(humidity);
  lcd.print(" %");

  lcd.setCursor(0, 2);
  lcd.print("CO2: ");
  lcd.print(co2);
  lcd.print(" ppm");

  lcd.setCursor(0, 3);
  lcd.print("pH: ");
  lcd.print(ph);

  // Send data to Firebase
  if (Firebase.ready()) {
    if (Firebase.setFloat(firebaseData, "/Monitoring/Temperature", temperature)) {
      Serial.println("Temperature sent to Firebase successfully");
    } else {
      Serial.print("Failed to send temperature: ");
      Serial.println(firebaseData.errorReason());
    }

    if (Firebase.setFloat(firebaseData, "/Monitoring/Humidity", humidity)) {
      Serial.println("Humidity sent to Firebase successfully");
    } else {
      Serial.print("Failed to send humidity: ");
      Serial.println(firebaseData.errorReason());
    }

    if (Firebase.setFloat(firebaseData, "/Monitoring/CO2", co2)) {
      Serial.println("CO2 sent to Firebase successfully");
    } else {
      Serial.print("Failed to send CO2: ");
      Serial.println(firebaseData.errorReason());
    }

    if (Firebase.setFloat(firebaseData, "/Monitoring/pH", ph)) {
      Serial.println("pH sent to Firebase successfully");
    } else {
      Serial.print("Failed to send pH: ");
      Serial.println(firebaseData.errorReason());
    }
  } else {
    Serial.println("Firebase not ready!");
  }

  delay(2000); // Wait 2 seconds before next loop
}
